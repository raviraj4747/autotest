name: Trigger Jenkins Build and Fetch Artifacts

on:
  push:
    branches:
      - main

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Trigger Jenkins Build
        id: trigger
        run: |
          JENKINS_URL="http://54.92.26.219"
          JOB_PATH="/job/DDP_iOS/job/main"
          AUTH="${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"

          echo "Triggering Jenkins build..."
          RESPONSE_HEADERS=$(mktemp)
          curl -X POST "$JENKINS_URL$JOB_PATH/buildWithParameters" \
            --user "$AUTH" \
            --header "Content-Type: application/json" \
            --data '{}' \
            -D $RESPONSE_HEADERS -o /dev/null

          QUEUE_URL=$(grep -Fi Location $RESPONSE_HEADERS | awk '{print $2}' | tr -d '\r\n')
          echo "QUEUE_URL=$QUEUE_URL" >> $GITHUB_ENV

      - name: Get Jenkins Build URL
        run: |
          AUTH="${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"
          echo "Polling for build to start..."

          for i in {1..30}; do
            RESPONSE=$(curl -s -L "${QUEUE_URL}api/json" --user "$AUTH")
            echo "Queue API Response: $RESPONSE"

            BUILD_NUMBER=$(echo "$RESPONSE" | jq -r '.executable.number // empty')
            if [ -n "$BUILD_NUMBER" ]; then
              BUILD_URL="http://54.92.26.219/job/DDP_iOS/job/main/$BUILD_NUMBER/"
              echo "Build URL: $BUILD_URL"
              echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV
              break
            fi
            sleep 5
          done

          if [ -z "$BUILD_NUMBER" ]; then
            echo "Error: Build did not start in time."
            exit 1
          fi

      - name: Wait for Jenkins Build to Finish
        run: |
          AUTH="${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"
          echo "Waiting for Jenkins build to finish..."

          for i in {1..240}; do
            RESPONSE=$(curl -s -L "${BUILD_URL}api/json" --user "$AUTH")
            echo "Build API Response: $RESPONSE"

            RESULT=$(echo "$RESPONSE" | jq -r '.result // empty')
            echo "Current result: $RESULT"

            if [ "$RESULT" != "null" ] && [ -n "$RESULT" ]; then
              echo "JENKINS_RESULT=$RESULT" >> $GITHUB_ENV
              if [ "$RESULT" == "SUCCESS" ]; then
                exit 0
              else
                exit 1
              fi
            fi
            sleep 10
          done

          echo "Error: Build did not complete in time."
          exit 1

      - name: Download Artifacts from Jenkins
        if: env.JENKINS_RESULT == 'SUCCESS'
        run: |
          AUTH="${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}"
          ARTIFACTS_JSON=$(curl -s -L "${BUILD_URL}api/json" --user "$AUTH")
          echo "$ARTIFACTS_JSON" | jq -r '.artifacts[].relativePath' > artifact_paths.txt

          mkdir -p jenkins-artifacts

          while IFS= read -r ARTIFACT_PATH; do
            FILE_NAME=$(basename "$ARTIFACT_PATH")
            echo "Downloading: $ARTIFACT_PATH"
            curl -s -O -J -L --user "$AUTH" "${BUILD_URL}artifact/$ARTIFACT_PATH"
            mv "$FILE_NAME" jenkins-artifacts/
          done < artifact_paths.txt

      - name: Upload Artifacts to GitHub
        if: env.JENKINS_RESULT == 'SUCCESS'
        uses: actions/upload-artifact@v4
        with:
          name: jenkins-artifacts
          path: jenkins-artifacts/
